apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion ANDROID_VERSION
    defaultConfig {
        applicationId "com.grappus.android.basemvvm"
        minSdkVersion 19
        targetSdkVersion ANDROID_VERSION
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled false

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    flavorDimensions "default"
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        development {
            getProps('./config/development.props').each { p ->
                buildConfigField 'String', p.key, p.value
            }
        }
        staging {
            getProps('./config/staging.props').each { p ->
                buildConfigField 'String', p.key, p.value
            }
        }
        production {
            getProps('./config/production.props').each { p ->
                buildConfigField 'String', p.key, p.value
            }
        }
    }

    compileOptions {
        targetCompatibility javaCompatibilityVersion
        sourceCompatibility javaCompatibilityVersion
    }
}

def getProps(path) {
    Properties props = new Properties()
    props.load(new FileInputStream(file(path)))
    return props
}

android.variantFilter { variant ->
    if ((variant.buildType.name == 'release' && (variant.getFlavors().get(0).name == 'development'
            || variant.getFlavors().get(0).name == 'staging')) || (variant.buildType.name == 'debug' &&
            variant.getFlavors().get(0).name == 'production')) {
        variant.setIgnore(true)
    }
}

dependencies {
    //External libraries
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    //Test
    testImplementation "junit:junit:$J_UNIT_VERSION"
    androidTestImplementation "androidx.test:runner:$TEST_RUNNER_VERSION"
    androidTestImplementation "androidx.test.espresso:$EXPRESSO_LIB_VERSION"

    implementation "androidx.annotation:annotation:$ANNOTATION_LIB_VERSION"

    //Native/Support Libraries
    implementation "androidx.legacy:legacy-support-v4:$SUPPORT_LIB_VERSION"

    implementation "androidx.appcompat:appcompat:$APP_COMPAT_VERSION"
    implementation "com.google.android.material:material:$SUPPORT_LIB_VERSION"
    implementation "androidx.cardview:cardview:$SUPPORT_LIB_VERSION"


    //MultiDex Support
    implementation "androidx.multidex:multidex:$MULTIDEX_SUPPORT_VERSION"

    //Gson
    implementation "com.google.code.gson:gson:$GSON_LIB_VERSION"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$RETROFIT_LIB_VERSION"
    implementation "com.squareup.retrofit2:converter-gson:$RETROFIT_LIB_VERSION"
    implementation "com.squareup.okhttp3:logging-interceptor:$LOGGING_INTERCEPTOR_LIB_VERSION"

    //RxJava
    implementation "io.reactivex.rxjava2:rxjava:$RX_JAVA_LIB_VERSION"
    implementation "io.reactivex.rxjava2:rxandroid:$RX_JAVA_ANDROID_LIB_VERSION"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$RX_JAVA_ADAPTER_LIB_VERSION"

    //Architecture Components: ViewModel, Room
    implementation "androidx.lifecycle:lifecycle-extensions:$LIFECYCLE_COMPONENT_VERSION"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$LIFECYCLE_COMPONENT_VERSION"
    annotationProcessor "androidx.room:room-compiler:$LIFECYCLE_COMPONENT_VERSION"

    implementation "androidx.room:room-runtime:$ROOM_VERSION"
    implementation "androidx.room:room-rxjava2:$ROOM_VERSION"

    //Glide
    implementation "com.github.bumptech.glide:glide:$GLIDE_LIB_VERSION"

    //File Picker
    implementation "com.kbeanie:multipicker:$MULTI_PICKER_LIB_VERSION"

    //Loader
    implementation "com.wang.avi:library:$LOADER_VERSION"

    //Google
    implementation "com.google.android.gms:play-services-maps:$PLAY_SERVICES_VERSION"
    implementation "com.google.android.gms:play-services-location:$PLAY_SERVICES_VERSION"
    implementation "com.google.android.gms:play-services-places:$PLAY_SERVICES_VERSION"

    //constraint layout
    implementation "com.android.support.constraint:constraint-layout:$CONSTRAINT_LAYOUT_VERSION"
}